{"version":3,"sources":["types/SortType.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/getPreparedTodos.tsx","index.tsx"],"names":["SortType","actions","todo","type","payload","currentTodoReducer","state","action","query","status","filterReducer","ALL","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","React","memo","changeLoading","dispatch","className","map","cn","id","completed","title","onClick","TodoFilter","value","onChange","event","target","ACTIVE","COMPLETED","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","loading","useState","user","setUser","useEffect","userId","finally","classNames","href","email","name","App","setLoading","currentLoading","fetchetTodos","todosActions","preparedTodos","useMemo","currentTodos","sortedTodos","Error","normalizedValue","toLowerCase","trim","includes","getPreparedTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ec8523b.chunk.js","sourcesContent":["export enum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { SortType } from '../types/SortType';\n\ntype ChangeStatusActionType = {\n  type: 'filter/CHANGE_STATUS',\n  payload: SortType,\n};\n\ntype ChangeQueryActionType = {\n  type: 'filter/CHANGE_QUERY',\n  payload: string,\n};\n\ntype Action = ChangeQueryActionType | ChangeStatusActionType;\ntype State = {\n  query: string,\n  status: SortType,\n};\n\nconst changeStatusAction = (status: SortType): ChangeStatusActionType => ({\n  type: 'filter/CHANGE_STATUS',\n  payload: status,\n});\n\nconst changeQueryAction = (query: string): ChangeQueryActionType => ({\n  type: 'filter/CHANGE_QUERY',\n  payload: query,\n});\n\nexport const actions = {\n  changeQueryAction,\n  changeStatusAction,\n};\n\nconst filterReducer = (\n  state: State = { query: '', status: SortType.ALL },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/CHANGE_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/CHANGE_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = {\n  type: 'todos/ADD',\n  payload: Todo[]\n};\n\ntype Actions = AddAction;\n\nconst add = (todos: Todo[]): AddAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { add };\n\nconst todosReducer = (todos: Todo[] = [], action: Actions): Todo[] => {\n  if (action.type === 'todos/ADD') {\n    return [...todos, ...action.payload];\n  }\n\n  return todos;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[],\n  changeLoading: () => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  changeLoading,\n}) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const handleClick = (clickedTodo: Todo) => {\n    dispatch(actions.setTodo(clickedTodo));\n    changeLoading();\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === currentTodo?.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {!!todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': todo.id !== currentTodo?.id,\n                      'fa-eye-slash': todo.id === currentTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\nimport { SortType } from '../../types/SortType';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = React.memo(() => {\n  const dispatch = useAppDispatch();\n  const { query: value } = useAppSelector(state => state.filter);\n\n  const handleDeleteClick = () => dispatch(actions.changeQueryAction(''));\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.changeQueryAction(event.target.value));\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actions.changeStatusAction(event.target.value as SortType));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleSelectChange}>\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!value.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  loading: boolean,\n  changeLoading: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  loading,\n  changeLoading,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getUser(todo?.userId as number)\n      .then(setUser)\n      .finally(changeLoading);\n  }, []);\n\n  const handleCLick = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCLick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n              >\n                {todo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { getPreparedTodos } from './utils/getPreparedTodos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const {\n    todos,\n    currentTodo,\n    filter,\n  } = useAppSelector(state => state);\n\n  const changeLoading = () => {\n    setLoading(currentLoading => !currentLoading);\n  };\n\n  useEffect(() => {\n    changeLoading();\n\n    getTodos()\n      .then(fetchetTodos => dispatch(todosActions.add(fetchetTodos)))\n      .finally(changeLoading);\n  }, []);\n\n  const preparedTodos = useMemo(() => getPreparedTodos(todos, filter), [todos, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {(loading && !preparedTodos.length && <Loader />)\n                || <TodoList todos={preparedTodos} changeLoading={changeLoading} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!currentTodo && (\n        <TodoModal loading={loading} changeLoading={changeLoading} />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { SortType } from '../types/SortType';\n\ntype FilterType = {\n  status: SortType,\n  query: string,\n};\n\nexport const getPreparedTodos = (currentTodos: Todo[], filter: FilterType) => {\n  const { status, query } = filter;\n  let sortedTodos: Todo[] = [];\n\n  switch (status) {\n    case SortType.ALL:\n      sortedTodos = [...currentTodos];\n      break;\n\n    case SortType.ACTIVE:\n      sortedTodos = currentTodos.filter(todo => !todo.completed);\n      break;\n\n    case SortType.COMPLETED:\n      sortedTodos = currentTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      throw new Error('Wrong sort type');\n  }\n\n  const normalizedValue = query.toLowerCase().trim();\n\n  return sortedTodos.filter(todo => todo.title\n    .toLowerCase()\n    .includes(normalizedValue));\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}